version: '3.8'

services:

  recruitment-zone-db-dev:
    image: mysql:8.2.0
    container_name: recruitment-zone-db-dev
    restart: always
    volumes:
      - recruitment-zone-db-dev-vol:/var/lib/mysql
    env_file:
      - docker/dev-vars/mysql.env
    labels:
      - "docker-volume-backup.archive-pre=/bin/sh -c 'mysql --archive > /tmp/dumps/mysql.archive'"
      - "docker-volume-backup.exec-label=mysql"

  recruitment-zone-application-dev:
    image: recruitment-zone-dev
    container_name: recruitment-zone-application-dev
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - recruitment-zone-db-dev
    volumes:
      - recruitment-zone-application-dev-vol:/var/log/recruitment-zone
    env_file:
      - docker/dev-vars/dev.env
    labels:
      - "docker-volume-backup.stop-during-backup=recruitment-zone-application-service"

  sonarqube:
    image: sonarqube:9.9.3-community
    container_name: sonarqube
    restart: always
    depends_on:
      - sonarqubedb
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqubedb:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"

  sonarqubedb:
    image: postgres:12
    container_name: sonarqubedb
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data


volumes:
  recruitment-zone-db-dev-vol:
    driver: local
  recruitment-zone-application-dev-vol:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local
  postgresql:
    driver: local
  postgresql_data:
    driver: local
