name: Build and deploy recruitment zone

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
jobs:
  trufflehog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: truffle security secrets scan
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --only-verified

#  sonarcloud:
 #   runs-on: ubuntu-16.04
  #  steps:
   #   - uses: actions/checkout@v1
    #  - name: Set up JDK
    #    uses: actions/setup-java@v1
    #    with:
    #      java-version: '11'
    #  - name: Analyze with SonarCloud
    #    run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=baralga -Dsonar.organization=baralga -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
    #    env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
      #- name: Unit Tests
      #  run: mvn -B test --file pom.xml
      - name: Build application
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/recruitmentzone:latest

      - name: Login to docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/recruitmentzone:latest


  #build-and-push:
  #  runs-on: ubuntu-latest
#
 #   steps:
  #    - name: Checkout code
   #     uses: actions/checkout@v2
#
 #     - name: Login to Azure Container Registry
  #      uses: Azure/docker-login@v1
   #     with:
    #      login-server: <your-acr-name>.azurecr.io
     #     username: ${{ secrets.ACR_USERNAME }}
      #    password: ${{ secrets.ACR_PASSWORD }}

#      - name: Build and push Docker image
 #       uses: Azure/docker@v1
  #      with:
   #       context: .
    #      dockerfile: ./path/to/Dockerfile
     #     imageName: <your-acr-name>.azurecr.io/<image-name>:<tag>
