-- Autogenerated: do not edit this file

CREATE TABLE BATCH_JOB_INSTANCE  (
                                     JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
                                     VERSION BIGINT ,
                                     JOB_NAME VARCHAR(100) NOT NULL,
                                     JOB_KEY VARCHAR(32) NOT NULL,
                                     constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ;

CREATE TABLE BATCH_JOB_EXECUTION  (
                                      JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
                                      VERSION BIGINT  ,
                                      JOB_INSTANCE_ID BIGINT NOT NULL,
                                      CREATE_TIME DATETIME(6) NOT NULL,
                                      START_TIME DATETIME(6) DEFAULT NULL ,
                                      END_TIME DATETIME(6) DEFAULT NULL ,
                                      STATUS VARCHAR(10) ,
                                      EXIT_CODE VARCHAR(2500) ,
                                      EXIT_MESSAGE VARCHAR(2500) ,
                                      LAST_UPDATED DATETIME(6),
                                      constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
                                          references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
                                             JOB_EXECUTION_ID BIGINT NOT NULL ,
                                             PARAMETER_NAME VARCHAR(100) NOT NULL ,
                                             PARAMETER_TYPE VARCHAR(100) NOT NULL ,
                                             PARAMETER_VALUE VARCHAR(2500) ,
                                             IDENTIFYING CHAR(1) NOT NULL ,
                                             constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
                                                 references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION  (
                                       STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
                                       VERSION BIGINT NOT NULL,
                                       STEP_NAME VARCHAR(100) NOT NULL,
                                       JOB_EXECUTION_ID BIGINT NOT NULL,
                                       CREATE_TIME DATETIME(6) NOT NULL,
                                       START_TIME DATETIME(6) DEFAULT NULL ,
                                       END_TIME DATETIME(6) DEFAULT NULL ,
                                       STATUS VARCHAR(10) ,
                                       COMMIT_COUNT BIGINT ,
                                       READ_COUNT BIGINT ,
                                       FILTER_COUNT BIGINT ,
                                       WRITE_COUNT BIGINT ,
                                       READ_SKIP_COUNT BIGINT ,
                                       WRITE_SKIP_COUNT BIGINT ,
                                       PROCESS_SKIP_COUNT BIGINT ,
                                       ROLLBACK_COUNT BIGINT ,
                                       EXIT_CODE VARCHAR(2500) ,
                                       EXIT_MESSAGE VARCHAR(2500) ,
                                       LAST_UPDATED DATETIME(6),
                                       constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
                                           references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
                                               STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
                                               SHORT_CONTEXT VARCHAR(2500) NOT NULL,
                                               SERIALIZED_CONTEXT TEXT ,
                                               constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
                                                   references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
                                              JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
                                              SHORT_CONTEXT VARCHAR(2500) NOT NULL,
                                              SERIALIZED_CONTEXT TEXT ,
                                              constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
                                                  references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
                                          ID BIGINT NOT NULL,
                                          UNIQUE_KEY CHAR(1) NOT NULL,
                                          constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_STEP_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_STEP_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
                                         ID BIGINT NOT NULL,
                                         UNIQUE_KEY CHAR(1) NOT NULL,
                                         constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
);

INSERT INTO BATCH_JOB_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_SEQ (
                               ID BIGINT NOT NULL,
                               UNIQUE_KEY CHAR(1) NOT NULL,
                               constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
);

INSERT INTO BATCH_JOB_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_SEQ);

# APP SCHEMA
CREATE TABLE IF NOT EXISTS CLIENT (
                                      `clientid` bigint NOT NULL,
                                      `created` datetime(6) DEFAULT NULL,
                                      `industry` enum('AGRICULTURE','CONSTRUCTION','ELECTRICAL','FINANCE','HEALTHCARE','INFORMATION_TECHNOLOGY','INSURANCE','LOGISTICS','MINING','TRANSPORT') DEFAULT NULL,
                                      `name` varchar(255) DEFAULT NULL,
                                      PRIMARY KEY (`clientid`)
) ;
CREATE TABLE IF NOT EXISTS USERS (
                                     `employeeid` bigint NOT NULL,
                                     `contact_number` varchar(255) DEFAULT NULL,
                                     `created` datetime(6) DEFAULT NULL,
                                     `email` varchar(255) DEFAULT NULL,
                                     `first_name` varchar(255) DEFAULT NULL,
                                     `enabled` bit(1) DEFAULT NULL,
                                     `last_name` varchar(255) DEFAULT NULL,
                                     `password` varchar(255) DEFAULT NULL,
                                     `username` varchar(255) DEFAULT NULL,
                                     PRIMARY KEY (`employeeid`),
                                     UNIQUE KEY (`username`)
) ;
CREATE TABLE IF NOT EXISTS CANDIDATE (
                                         `candidateid` bigint NOT NULL,
                                         `created` datetime(6) DEFAULT NULL,
                                         `current_employer` varchar(255) DEFAULT NULL,
                                         `current_province` enum('EASTERN_CAPE','FREE_STATE','GAUTENG','KWAZULU_NATAL','LIMPOPO','MPUMALANGA','NORTHERN_CAPE','NORTH_WEST','WESTERN_CAPE') DEFAULT NULL,
                                         `current_role` varchar(255) DEFAULT NULL,
                                         `education_level` enum('BACHELORS_DEGREE','HONORS','MATRIC_CERTIFICATE','NATIONAL_CERTIFICATE','NQF_LEVEL_5','NQF_LEVEL_6') DEFAULT NULL,
                                         `email_address` varchar(255) DEFAULT NULL,
                                         `first_name` varchar(255) DEFAULT NULL,
                                         `id_number` varchar(255) DEFAULT NULL,
                                         `last_name` varchar(255) DEFAULT NULL,
                                         `phone_number` varchar(255) DEFAULT NULL,
                                         `relocation` bit(1) DEFAULT NULL,
                                         `seniority_level` varchar(255) DEFAULT NULL,
                                         PRIMARY KEY (`candidateid`)
);

CREATE TABLE IF NOT EXISTS VACANCY (
                                       `vacancyid` bigint NOT NULL,
                                       `category` varchar(255) DEFAULT NULL,
                                       `created` datetime(6) DEFAULT NULL,
                                       `emp_type` enum('FULLTIME','PARTIME') DEFAULT NULL,
                                       `end_date` date DEFAULT NULL,
                                       `industry` enum('AGRICULTURE','CONSTRUCTION','ELECTRICAL','FINANCE','HEALTHCARE','INFORMATION_TECHNOLOGY','INSURANCE','LOGISTICS','MINING','TRANSPORT') DEFAULT NULL,
                                       `job_type` enum('CONTRACT','PERMANENT') DEFAULT NULL,
                                       `job_description` varchar(255) DEFAULT NULL,
                                       `job_title` varchar(255) DEFAULT NULL,
                                       `location` varchar(255) DEFAULT NULL,
                                       `publish_date` date DEFAULT NULL,
                                       `requirements` varchar(255) DEFAULT NULL,
                                       `seniority_level` varchar(255) DEFAULT NULL,
                                       `status` enum('ACTIVE','EXPIRED','PENDING') DEFAULT NULL,
                                       `the_clientid` bigint DEFAULT NULL,
                                       `the_empid` bigint DEFAULT NULL,
                                       `clientid` bigint DEFAULT NULL,
                                       `employeeid` bigint DEFAULT NULL,
                                       PRIMARY KEY (`vacancyid`),
                                       KEY (`clientid`),
                                       KEY (`employeeid`),
                                       FOREIGN KEY (`employeeid`) REFERENCES USERS (`employeeid`),
                                       FOREIGN KEY (`clientid`) REFERENCES CLIENT (`clientid`)
);

CREATE TABLE IF NOT EXISTS APPLICATION (
                                           `applicationid` bigint NOT NULL,
                                           `created` datetime(6) DEFAULT NULL,
                                           `date_received` varchar(255) DEFAULT NULL,
                                           `status` enum('INTERVIEW','OFFER','PENDING','REJECTED','SHORT_LISTED') DEFAULT NULL,
                                           `submission_date` varchar(255) DEFAULT NULL,
                                           `candidateid` bigint DEFAULT NULL,
                                           `vacancyid` bigint DEFAULT NULL,
                                           PRIMARY KEY (`applicationid`),
                                           KEY(`candidateid`),
                                           KEY (`vacancyid`),
                                           FOREIGN KEY (`candidateid`) REFERENCES candidate (`candidateid`),
                                           FOREIGN KEY (`vacancyid`) REFERENCES vacancy (`vacancyid`)
);


CREATE TABLE IF NOT EXISTS APPLICATION_SEQ (
                                               `next_val` bigint DEFAULT NULL
);


-- recruitmentzonedb.authorities definition

CREATE TABLE IF NOT EXISTS AUTHORITIES (
                                           `authority` enum('ROLE_ADMIN','ROLE_EMPLOYEE','ROLE_GUEST','ROLE_MANAGER') DEFAULT NULL,
                                           `employeeid` bigint NOT NULL,
                                           PRIMARY KEY (`employeeid`),
                                           FOREIGN KEY (`employeeid`) REFERENCES USERS (`employeeid`)
);

-- recruitmentzonedb.blog definition

CREATE TABLE IF NOT EXISTS BLOG (
                                    `blogid` bigint NOT NULL,
                                    `blog_description` varchar(255) DEFAULT NULL,
                                    `blog_title` varchar(255) DEFAULT NULL,
                                    `body` varchar(255) DEFAULT NULL,
                                    `created` datetime(6) DEFAULT NULL,
                                    `end_date` varchar(255) DEFAULT NULL,
                                    `publish_date` varchar(255) DEFAULT NULL,
                                    `status` enum('ACTIVE','EXPIRED','PENDING') DEFAULT NULL,
                                    `employeeid` bigint DEFAULT NULL,
                                    PRIMARY KEY (`blogid`),
                                    KEY (`employeeid`),
                                    FOREIGN KEY (`employeeid`) REFERENCES USERS(`employeeid`)
);


-- recruitmentzonedb.blog_seq definition

CREATE TABLE IF NOT EXISTS BLOG_SEQ (
                                        `next_val` bigint DEFAULT NULL
);

-- recruitmentzonedb.candidate definition



-- recruitmentzonedb.candidate_note definition

CREATE TABLE IF NOT EXISTS CANDIDATE_NOTE (
                                              `noteid` bigint NOT NULL,
                                              `comment` varchar(255) DEFAULT NULL,
                                              `date_captured` datetime(6) DEFAULT NULL,
                                              `candidateid` bigint DEFAULT NULL,
                                              `clientid` bigint DEFAULT NULL,
                                              PRIMARY KEY (`noteid`),
                                              KEY `FKk94l87fpxjdrv2l9pg7g0xt21` (`candidateid`),
                                              KEY `FKtoimhin1u8ymhwwdsajgg8qum` (`clientid`),
                                              FOREIGN KEY (`candidateid`) REFERENCES CANDIDATE (`candidateid`),
                                              FOREIGN KEY (`clientid`) REFERENCES CLIENT (`clientid`)
);


-- recruitmentzonedb.candidate_note_seq definition

CREATE TABLE IF NOT EXISTS CANDIDATE_NOTE_SEQ (
                                                  `next_val` bigint DEFAULT NULL
) ;


-- recruitmentzonedb.candidate_seq definition

CREATE TABLE IF NOT EXISTS CANDIDATE_SEQ (
                                             `next_val` bigint DEFAULT NULL
) ;


-- recruitmentzonedb.client definition



-- recruitmentzonedb.client_seq definition

CREATE TABLE IF NOT EXISTS CLIENT_SEQ (
                                          `next_val` bigint DEFAULT NULL
) ;


-- recruitmentzonedb.contact_person definition

CREATE TABLE IF NOT EXISTS CONTACT_PERSON (
                                              `contact_personid` bigint NOT NULL,
                                              `cell_phone` varchar(255) DEFAULT NULL,
                                              `created` datetime(6) DEFAULT NULL,
                                              `email_address` varchar(255) DEFAULT NULL,
                                              `first_name` varchar(255) DEFAULT NULL,
                                              `land_line` varchar(255) DEFAULT NULL,
                                              `last_name` varchar(255) DEFAULT NULL,
                                              `clientid` bigint DEFAULT NULL,
                                              PRIMARY KEY (`contact_personid`),
                                              KEY (`clientid`),
                                              FOREIGN KEY (`clientid`) REFERENCES CLIENT (`clientid`)
) ;


-- recruitmentzonedb.contact_person_seq definition

CREATE TABLE IF NOT EXISTS CONTACT_PERSON_SEQ (
                                                  `next_val` bigint DEFAULT NULL
) ;


-- recruitmentzonedb.document definition

CREATE TABLE IF NOT EXISTS DOCUMENT (
                                        `docid` bigint NOT NULL,
                                        `contenttype` varchar(255) DEFAULT NULL,
                                        `created` datetime(6) DEFAULT NULL,
                                        `document_location` varchar(255) DEFAULT NULL,
                                        `document_type` enum('CURRICULUM_VITAE','DRIVERS_LICENCE','ID_DOCUMENT','PAYSLIP','QUALIFICATION_CERTIFICATE') DEFAULT NULL,
                                        `filedata` varbinary(255) DEFAULT NULL,
                                        `filename` varchar(255) DEFAULT NULL,
                                        `filesize` varchar(255) DEFAULT NULL,
                                        `candidateid` bigint DEFAULT NULL,
                                        PRIMARY KEY (`docid`),
                                        KEY (`candidateid`),
                                        FOREIGN KEY (`candidateid`) REFERENCES CANDIDATE (`candidateid`)
);


CREATE TABLE IF NOT EXISTS DOCUMENT_SEQ (
                                            `next_val` bigint DEFAULT NULL
)  ;


-- recruitmentzonedb.employeeverificationtoken definition

CREATE TABLE IF NOT EXISTS EMPLOYEEVERIFICATIONTOKEN (
                                                         `id` bigint NOT NULL,
                                                         `creation_time` varbinary(255) DEFAULT NULL,
                                                         `expiration_time` varbinary(255) DEFAULT NULL,
                                                         `random_val` varchar(255) DEFAULT NULL,
                                                         `token` varchar(255) DEFAULT NULL,
                                                         `employeeid` bigint DEFAULT NULL,
                                                         PRIMARY KEY (`id`),
                                                         UNIQUE KEY  (`employeeid`),
                                                         FOREIGN KEY (`employeeid`) REFERENCES USERS (`employeeid`)
) ;

-- recruitmentzonedb.employeeverificationtoken_seq definition

CREATE TABLE IF NOT EXISTS EMPLOYEEVERIFICATIONTOKEN_SEQ (
                                                             `next_val` bigint DEFAULT NULL
) ;


-- recruitmentzonedb.users definition



-- recruitmentzonedb.users_seq definition

CREATE TABLE IF NOT EXISTS USERS_SEQ (
                                         `next_val` bigint DEFAULT NULL
) ;



-- recruitmentzonedb.vacancy definition




-- recruitmentzonedb.vacancy_seq definition

CREATE TABLE IF NOT EXISTS VACANCY_SEQ (
                                           `next_val` bigint DEFAULT NULL
) ;

-- Insert three users into the USERS table with the current timestamp for the 'created' column
INSERT INTO users (employeeid, contact_number, created,email, first_name, enabled, last_name, password, username)
VALUES
    (1, '0849927804', CURRENT_TIMESTAMP, 'justin@recruitmentzone.co.za', 'Justin', 1, 'Maboshego',
     '$2a$10$IHItOkrSNOwlmjgTmTsB6exoMxk1ZDlmFIdKlUN069t4KJul8YAGG', 'justin@recruitmentzone.co.za'),

    (2, '0726588662', CURRENT_TIMESTAMP, 'noni.mbalati@kiunga.co.za', 'Noni', 1, 'Mbalati',
     '$2a$10$8NGwFq6AxDrQiLgNGwV2eO3rOZ/Y6mCTou1GouSbAND6ZtRzvAZaO', 'noni.mbalati@kiunga.co.za'),

    (3, '0849927804', CURRENT_TIMESTAMP, 'admin.agent@kiunga.co.za', 'Admin', 1, 'Agent',
     '$2a$10$IHItOkrSNOwlmjgTmTsB6exoMxk1ZDlmFIdKlUN069t4KJul8YAGG', 'admin.agent@kiunga.co.za');

INSERT INTO authorities (authority,employeeid)
VALUES
    ('ROLE_ADMIN', 1),
    ('ROLE_MANAGER', 2),
    ('ROLE_EMPLOYEE', 3);